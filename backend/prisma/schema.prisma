generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  email         String         @unique
  role          Role           @default(CLIENT)
  createdAt     DateTime       @default(now())
  password      String
  updatedAt     DateTime       @updatedAt
  orders        Order[]
  refreshTokens RefreshToken[]
}

model Product {
  id          Int               @id @default(autoincrement())
  name        String
  price       Float
  createdAt   DateTime          @default(now())
  description String?
  imageUrl    String?
  stock       Int               @default(0)
  updatedAt   DateTime          @updatedAt
  orderItems  OrderItem[]
  categories  ProductCategory[]
}

model Category {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  products ProductCategory[]
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  productId  Int
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@unique([productId, categoryId])
  @@map("product_category")
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  status     OrderStatus @default(PENDING)
  total      Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
  @@map("order_item")
}

enum Role {
  CLIENT
  MERCHANT
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("refresh_tokens")
}
